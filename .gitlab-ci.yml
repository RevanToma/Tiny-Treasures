services:
  - name: mongo:6.0
    alias: mongodb

stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2

# Define job templates
.template:
  image: node:lts

# Install dependencies for the web app
app-install:
  stage: build
  extends: .template
  script:
    - cd web-app
    - npm ci
  artifacts:
    paths:
      - web-app/node_modules/

# Build the web app
app-build:
  stage: build
  extends: .template
  script:
    - cd web-app
    - npm run build
  needs: ["app-install"]
  artifacts:
    paths:
      - web-app/dist/

# Install dependencies for the backend
backend-install:
  stage: build
  extends: .template
  script:
    - cd backend
    - npm ci
  artifacts:
    paths:
      - backend/node_modules/
    expire_in: 1 day

# Build the backend
backend-build:
  stage: build
  extends: .template
  before_script:
    - cd backend
  script:
    - tsc --noEmit || true
    - npm run build
  needs: ["backend-install"]
  artifacts:
    paths:
      - backend/

# Build and push the Docker image
build-image:
  stage: deploy
  image:
    name: docker:20.10.8
    entrypoint: [""]
  services:
    - docker:20.10.8-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  script:
    - export IMAGE_TAG=${CI_COMMIT_TAG:-$CI_COMMIT_SHA}
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
    - docker tag "$CI_REGISTRY_IMAGE:$IMAGE_TAG" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:latest"
